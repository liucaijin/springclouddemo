server.port = 8765
spring.application.name = eureka-client

eureka.instance.hostname = client
eureka.instance.instance-id = ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
eureka.client.register-with-eureka = true  
eureka.client.fetch-registry = true
eureka.client.service-url.defaultZone = http://localhost:8761/eureka/,http://localhost:8762/eureka/
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
eureka.instance.prefer-ip-address=true

#zipkin
spring.zipkin.base-url=http://localhost:9411

spring.sleuth.sampler.probability=1.0

#hystrix
feign.hystrix.enabled=true
#eureka-client-service 服务名
eureka-client-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
##重试机制
##开关
spring.cloud.loadbalancer.retry.enabled=true
##是否所有操作都重试
ribbon.OkToRetryOnAllOperations=false
##重试负载均衡其他的实例最大重试次数，不包括首次server
ribbon.MaxAutoRetriesNextServer=2
#同一台实例的最大重试次数
ribbon.MaxAutoRetries=1

##----------配置中心获取配置
#关闭spring cloud config，spring cloud默认要从config中读取配置，通过该配置，只从本地application.properties中读取配置
spring.cloud.config.enabled=true

#配置文件名
spring.cloud.config.name=config-server
#配置文件分支
#spring.cloud.config.profile=dev
# 远程仓库的分支
spring.cloud.config.label=master

#指定配置中心名称（如果使用eureka可以这样配置）
spring.cloud.config.discovery.service-id=config-server
spring.cloud.config.profile=dev